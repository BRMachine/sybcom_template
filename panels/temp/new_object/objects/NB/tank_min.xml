<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="ru_RU.utf8"></prop>
  </prop>
  <prop name="Size">343 151</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">22 52</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[// ============================= Used libraries
#uses &quot;sdSymbolDynamics&quot;
//--------------------------------------------------

// ============================= Used variables/constants
enum Fuel{
  AI100 = 1,
  AI92 = 2,
  AI95 = 3,
  AI98 = 6,
  DT = 4,
  DTL = 5
};
const string DP = $dp;
const string LogicRVS = $dpLogicRVS;
const string LS1 = $ls1;
const string LS2 = $ls2;
const string LS3 = $ls3;

float max_lvl, min_lvl;
Fuel fuel;
//--------------------------------------------------

// ============================= Used properties
#property string resName
public void setResName(string s){text_name.text(s);}
public string getResName(){return text_name.text;}

// #property float max_lvl
// public void setMax_lvl(float s){max_lvl = s;}
// public float getMax_lvl(){return max_lvl;}
//
// #property float min_lvl
// public void setMin_lvl(float s){min_lvl = s;}
// public float getMin_lvl(){return min_lvl;}

#property Fuel fuel
public void setFuel(Fuel f){fuel = f;}
public Fuel getFuel(){return fuel;}

//--------------------------------------------------


// ============================= Predefined functions
string fuelToColor(Fuel f){
  if(f == Fuel::AI100){
    return &quot;AI100&quot;;
  }else if(f == Fuel::AI95){
    return &quot;AI95&quot;;
  }else if(f == Fuel::AI92){
    return &quot;AI92&quot;;
  }else if(f == Fuel::DT){
    return &quot;DT&quot;;
  }else if(f == Fuel::DTL){
    return &quot;DTL_pipe&quot;;
  }else if(f == Fuel::AI98){
    return &quot;AI98&quot;;
  }
}
string fuelToText(Fuel f){
  if(f == Fuel::AI100){
    return &quot;100&quot;;
  }else if(f == Fuel::AI95){
    return &quot;95&quot;;
  }else if(f == Fuel::AI92){
    return &quot;92&quot;;
  }else if(f == Fuel::AI98){
    return &quot;98&quot;;
  }else if(f == Fuel::DT){
    return &quot;ДТ&quot;;
  }else if(f == Fuel::DTL){
    return &quot;ДТЛ&quot;;
  }
}
string stateToString(int state){
  string res = &quot;НЕИЗВЕСТНО&quot;;
  switch(state){
    case 1:
      res = &quot;ХРАНЕНИЕ&quot;;
      break;
    case 2:
      res = &quot;ПРИЕМ&quot;;
      break;
    case 3:
      res = &quot;ОТПУСК&quot;;
      break;
    case 6:
      res = &quot;РЕМОНТ&quot;;
      break;
    case 99:
      res = &quot;СМЕНА&quot;;
      break;
    default:
      res = &quot;НЕИЗВЕСТНО&quot;;
      break;
  }
  return res;
}
mapping stateToColor(int state){
  mapping res = makeMapping(&quot;back&quot;, &quot;white&quot;, &quot;text&quot;, &quot;black&quot;);
  switch(state){
    case 1:  // Прием
      res[&quot;back&quot;] = &quot;yellow&quot;;
      res[&quot;text&quot;] = &quot;black&quot;;
      break;
    case 2:  //Отпуск
      res[&quot;back&quot;] = &quot;red&quot;;
      res[&quot;text&quot;] = &quot;white&quot;;
      break;
    case 3:  // Ремонт
      res[&quot;back&quot;] = &quot;black&quot;;
      res[&quot;text&quot;] = &quot;white&quot;;
      break;
    case 6:  // Хранение
      res[&quot;back&quot;] = &quot;green&quot;;
      res[&quot;text&quot;] = &quot;black&quot;;
      break;
    case 99:  // смена режима
      res[&quot;back&quot;] = &quot;&lt;green,4,yellow,4&gt;&quot;;
      res[&quot;text&quot;] = &quot;black&quot;;
      break;
    default:
      res[&quot;back&quot;] = &quot;red&quot;;
      res[&quot;text&quot;] = &quot;white&quot;;
      break;
  }
  return res;
}

void cbLogicRVS(string dpe, int val) {
  mapping colors = stateToColor(val);
  txt_status.text(stateToString(val));
  txt_status.color(colors[&quot;text&quot;]);
  txt_status.backCol(colors[&quot;back&quot;]);
}

void worker_val(dyn_string dp, dyn_anytype val){
//   sdShowValue(&quot;val_l&quot;, dp[2], val[2], 1, &quot;&quot;, 1, &quot;&quot;);
//   sdShowValue(&quot;val_p&quot;, dp[3], val[3], 1, &quot;&quot;, 1, &quot;&quot;);
//   sdShowValue(&quot;val_m&quot;, dp[5], val[5], 1, &quot;&quot;, 1, &quot;&quot;);
//   sdShowValue(&quot;val_v&quot;, dp[6], val[6]/1000, 1, &quot;&quot;, 1, &quot;&quot;);
  lvl_back.backCol(val[4]);
  sdScaleVertical(&quot;top_bar&quot;, val[1], val[3], val[2]);
}

void worker_ls(dyn_string dp, dyn_bit32 sts){
/*  int ls1 = (uint)sts[1];
  rec_ls1.backCol = (ls1 &amp; 0x01 | ls1 &amp; 0x02 | ls1 &amp; 0x04) ? &quot;Red&quot; : &quot;Grey&quot;;
  if(dynlen(sts) &gt; 1){
    int ls2 = (uint)sts[2];
    rec_ls2.backCol = (ls2 &amp; 0x01 | ls2 &amp; 0x02 | ls2 &amp; 0x04) ? &quot;Red&quot; : &quot;Grey&quot;;
  }
 else
   rec_ls2.backCol(&quot;Green&quot;);*/

  if (dynlen(sts) == 1){
      int ls1 = (uint)sts[1];
      rec_ls1.backCol = (ls1 &amp; 0x01 | ls1 &amp; 0x02 | ls1 &amp; 0x04) ? &quot;Red&quot; : &quot;Grey&quot;;
      rec_ls1.visible(1);
      rec_ls2.visible(0);
      rec_ls3.visible(0);
  }
  else if (dynlen(sts) == 2){
      int ls1 = (uint)sts[1];
      int ls2 = (uint)sts[2];
      rec_ls1.backCol = (ls1 &amp; 0x01 | ls1 &amp; 0x02 | ls1 &amp; 0x04) ? &quot;Red&quot; : &quot;Grey&quot;;
      rec_ls2.backCol = (ls2 &amp; 0x01 | ls2 &amp; 0x02 | ls2 &amp; 0x04) ? &quot;Red&quot; : &quot;Grey&quot;;
      rec_ls1.visible(1);
      rec_ls2.visible(1);
      rec_ls3.visible(0);
  }
  else if (dynlen(sts) == 3){
      int ls1 = (uint)sts[1];
      int ls2 = (uint)sts[2];
      int ls3 = (uint)sts[3];
      rec_ls1.backCol = (ls1 &amp; 0x01 | ls1 &amp; 0x02 | ls1 &amp; 0x04) ? &quot;Red&quot; : &quot;Grey&quot;;
      rec_ls2.backCol = (ls2 &amp; 0x01 | ls2 &amp; 0x02 | ls2 &amp; 0x04) ? &quot;Red&quot; : &quot;Grey&quot;;
      rec_ls3.backCol = (ls3 &amp; 0x01 | ls3 &amp; 0x02 | ls3 &amp; 0x04) ? &quot;Red&quot; : &quot;Grey&quot;;
      rec_ls1.visible(1);
      rec_ls2.visible(1);
      rec_ls3.visible(1);
  }
}


void initFuel(Fuel f){
  txt_fuel.text(fuelToText(f));

  rec_fuel.backCol(fuelToColor(f));
  top_bar.backCol(fuelToColor(f));
}

// void cbAlarm(dyn_string dp, dyn_string color){
//   bool alarm = false;
  //DebugTN(dp,color);
//   for(int i=1; i&lt;=dynlen(color); i++){
//     if(color[i]!= &quot;&quot;){
//       shp_val_l.backCol(color[i]);
//       alarm = true;
//     }
//   }
//   if(!alarm)
//   shp_val_l.backCol(&quot;white&quot;);
// }
//--------------------------------------------------
]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main(){
  dpConnect(&quot;cbLogicRVS&quot;, LogicRVS + &quot;.STS.status_rvs&quot;);

  dpConnect(&quot;worker_val&quot;, DP + &quot;.LVL.val&quot;,
                          DP + &quot;.SCL.LSH&quot;,
                          DP + &quot;.SCL.LSL&quot;,
                          &quot;Logic&quot; + DP + &quot;.UnsanctionedChangeLevel:_alert_hdl.._act_state_color&quot;
                          );


  if(LS3 != &quot;&quot;){
    dpConnect(&quot;worker_ls&quot;, LS1 + &quot;.status.sts_bit&quot;,
                           LS2 + &quot;.status.sts_bit&quot;,
                           LS3 + &quot;.status.sts_bit&quot;);
  }
  else if(LS2 != &quot;&quot;){
    dpConnect(&quot;worker_ls&quot;, LS1 + &quot;.status.sts_bit&quot;,
                           LS2 + &quot;.status.sts_bit&quot;);
  }else{
    dpConnect(&quot;worker_ls&quot;, LS1 + &quot;.status.sts_bit&quot;);
  }

  initFuel(fuel);
}
]]></script>
 </events>
 <shapes>
  <shape Name="RECTANGLE1" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">22 52</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">0</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[gradient,[linear,reflect,-0.325,0.482,0.398,0.482,0,{0,0,0},0.738,{255,255,255}]]</prop>
    <prop name="Geometry">1.90625 0 0 1.537037037037037 -16.9375 -30.92592592592593</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">22 52</prop>
    <prop name="Size">65 55</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="LINE2" shapeType="LINE" layerId="0">
   <properties>
    <prop name="serialId">9</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">24.42857142857143 132.4787989080982</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">8</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">True</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="Start">24.42857142857143 132.4787989080982</prop>
    <prop name="End">147 132.4787989080982</prop>
   </properties>
  </shape>
  <shape Name="POLYGON5" shapeType="POLYGON" layerId="0">
   <properties>
    <prop name="serialId">13</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">16 62.00000000000001</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">12</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">True</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,0]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[gradient,[linear,reflect,-0.41,0.482,0.398,0.482,0,{0,0,0},0.775,{255,255,255}]]</prop>
    <prop name="Geometry">0.8840579710144928 0 0 1 10.85507246376812 -13.23548680618745</prop>
    <prop name="Closed">True</prop>
    <prop name="Points">
     <prop name="Location">16 62.00000000000001</prop>
     <prop name="Location">24 58</prop>
     <prop name="Location">56 52</prop>
     <prop name="Location">116 52</prop>
     <prop name="Location">150 58</prop>
     <prop name="Location">154 62.00000000000001</prop>
    </prop>
   </properties>
  </shape>
  <shape Name="rec_fuel" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">12</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">60 22</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{117,178,117}</prop>
    <prop name="TabOrder">11</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.8846153846153848 0 0 0.9285714285714282 -27.02169511037197 97.57142857142858</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">60 22</prop>
    <prop name="Size">27 15</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="txt_fuel" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">10</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">14 36</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">9</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">0.874060866961379 0 0 1.315126050420168 13.52629572508139 69.65546218487395</prop>
    <prop name="Location">14 36</prop>
    <prop name="Size">29 11</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">MS Shell Dlg 2,-1,12,5,50,0,0,0,0,0,Обычный</prop>
    </prop>
    <prop name="Text">
     <prop name="ru_RU.utf8">ДТл</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">False</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter|AlignVCenter]</prop>
   </properties>
  </shape>
  <shape Name="RECTANGLE6" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">14</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">200 48</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{230,230,218}</prop>
    <prop name="TabOrder">13</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.9095535714285716 0 0 0.5253684807256237 -128.9107142857143 38.58588435374148</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">200 48</prop>
    <prop name="Size">101 127</prop>
    <prop name="CornerRadius">3</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="text_name" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">19</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">322 84</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">18</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.042572070456305 0 0 1.006369426751592 -242.4224924012159 -28.97361237488625</prop>
    <prop name="Location">322 84</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">Microsoft Tai Le,-1,12,5,50,0,0,0,0,0,Regular</prop>
    </prop>
    <prop name="Text">
     <prop name="ru_RU.utf8">№1/5 2000м3</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">False</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter|AlignVCenter]</prop>
   </properties>
  </shape>
  <shape Name="rec_ls2" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">21</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">248 154</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">20</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.184212552783564 0 0 0.4349522292993623 -7.641734310773005 -20.71965675866934</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">248 154</prop>
    <prop name="Size">39 17</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="PRIMITIVE_TEXT9" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">29</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">65.42857142857135 80.47879890809826</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">28</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.140625000000002 0 0 1 -9.482142857142994 0</prop>
    <prop name="Location">65.42857142857135 80.47879890809826</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="ru_RU.utf8">L</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">False</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
  </shape>
  <shape Name="PRIMITIVE_TEXT10" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">30</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">63.14285714285705 93.45962597576739</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">29</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.222462937072358 0 0 1 -11.43509500556094 3.857142857142861</prop>
    <prop name="Location">63.14285714285705 93.45962597576739</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="ru_RU.utf8">V</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">False</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
  </shape>
  <shape Name="PRIMITIVE_TEXT12" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">32</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">66.92857142857136 113.8216560509553</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">31</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">66.92857142857136 113.8216560509553</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="ru_RU.utf8">M</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">False</prop>
    <prop name="TextFormat">[0s,,,AlignRight]</prop>
   </properties>
  </shape>
  <shape Name="txt_status" shapeType="Label" layerId="0">
   <properties>
    <prop name="serialId">43</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">53.00000000000001 63.85714285714286</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">41</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">53 63.85714285714285</prop>
    <prop name="Size">92 14</prop>
    <extended>
     <prop type="CHAR_STRING" name="text">НЕИЗВЕСТНО</prop>
     <prop type="ENUM" name="textFormat">2</prop>
     <prop type="ENUM" name="alignment">132</prop>
    </extended>
   </properties>
  </shape>
  <shape Name="RECTANGLE2" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">2</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">48 128</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">white</prop>
    <prop name="TabOrder">1</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1.249999999999999 0 0 1.16137566137566 -32.44469206543604 -94.37037037037017</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">48 128</prop>
    <prop name="Size">17 55</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="back_bar" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">22</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">48 128</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{128,128,128}</prop>
    <prop name="TabOrder">21</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.9068627450980389 0 0 1.071907410236986 -13.22045548555825 -81.08714866313142</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">48 128</prop>
    <prop name="Size">17 55</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="top_bar" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">17</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">48 128</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{117,174,117}</prop>
    <prop name="TabOrder">16</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.9061375449820068 0 0 -1.067377239014709 -13.18847455244127 250.6242865938828</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">48 128</prop>
    <prop name="Size">17 55</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="PUSH_BUTTON1" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">45</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">25 81</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">42</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">24.99999999999999 37.43076923076922</prop>
    <prop name="Size">125 96</prop>
    <prop name="BorderStyle">None</prop>
    <prop name="Text">
     <prop name="ru_RU.utf8"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(mapping event)
{
  ChildPanelOnCentral(&quot;faceplates/NB/rvs.xml&quot;, dpGetDescription(DP + &quot;.&quot;), makeDynString(&quot;$dp:&quot; + DP,
                                                                                         &quot;$ls1:&quot; + LS1,
                                                                                         &quot;$ls2:&quot; + LS2,
                                                                                         &quot;$ls3:&quot; + LS3,
                                                                                         &quot;$name:&quot; + getResName(),
                                                                                         &quot;$fuel:&quot; + (int)fuel));
}
]]></script>
    <script name="Acknowledge" isEscaped="1"><![CDATA[// SimpleCtrlScriptStart {valid}
main(int iType)
{
  dyn_errClass err;

  int          i, iReturnValue = 1, iDpCount = 12;
  dyn_int      diType = makeDynInt();
  dyn_string   dsDps;

  dsDps[1] = $dp+&quot;.LVL._sAH_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[2] = $dp+&quot;.LVL._sWH_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[3] = $dp+&quot;.LVL._sWL_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[4] = $dp+&quot;.LVL._sAL_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[5] = $dp+&quot;.WTR._sAH_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[6] = $dp+&quot;.WTR._sWH_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[7] = $dp+&quot;.WTR._sWL_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[8] = $dp+&quot;.WTR._sAL_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[9] = $dp+&quot;.UnsanctionedChangeLevel&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[10] = $ls1+&quot;.status.bool.red&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[11] = $ls2+&quot;.status.bool.red&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[12] = $ls3+&quot;.status.bool.red&quot; + &quot;:_alert_hdl.._ack&quot;;

  if ( isFunctionDefined(&quot;isAckable&quot;) )
  {
    isAckable( iType, dsDps, iReturnValue );
    if ( iReturnValue == 0 || dynlen (dsDps ) &lt; 1 ) return;
  }

  for ( i = 1; i &lt;= dynlen(dsDps); i++ )
    diType[i] = iType;

  dpSetWait( dsDps, diType );

  err = getLastError();
  if ( dynlen(err) &gt; 0 )
    DebugN(err);
}
// SimpleCtrlScript {EP_confirm}
// dpCount {12}
// dp1 {$dp + &quot;.LVL._sAH_Level&quot;}
// dp2 {$dp + &quot;.LVL._sWH_Level&quot;}
// dp3 {$dp + &quot;.LVL._sWL_Level&quot;}
// dp4 {$dp + &quot;.LVL._sAL_Level&quot;}
// dp5 {$dp + &quot;.WTR._sAH_Level&quot;}
// dp6 {$dp + &quot;.WTR._sWH_Level&quot;}
// dp7 {$dp + &quot;.WTR._sWL_Level&quot;}
// dp8 {$dp + &quot;.WTR._sAL_Level&quot;}
// dp9 {$dp + &quot;.UnsanctionedChangeLevel&quot;}
// dp10 {$ls1 + &quot;.status.bool.red&quot;}
// dp11 {$ls2 + &quot;.status.bool.red&quot;}
// dp12 {$ls3 + &quot;.status.bool.red&quot;}
// SimpleCtrlScriptEnd {EP_confirm}
]]></script>
   </events>
  </shape>
  <reference parentSerial="-1" Name="PANEL_REF2" referenceId="0">
   <properties>
    <prop name="FileName">objects/NB/ai_rvs_mini.xml</prop>
    <prop name="Location">51.40404040404037 20.61577369801423</prop>
    <prop name="Geometry">1 0 0 1 11.31024531024536 72.38422630198576</prop>
    <prop name="TabOrder">43</prop>
    <prop name="dollarParameters">
     <prop name="dollarParameter">
      <prop name="Dollar">$ANALOG</prop>
      <prop name="Value">LVL</prop>
     </prop>
     <prop name="dollarParameter">
      <prop name="Dollar">$dp</prop>
      <prop name="Value">$dp</prop>
     </prop>
     <prop name="dollarParameter">
      <prop name="Dollar">$dpLogicRVS</prop>
      <prop name="Value">$dpLogicRVS</prop>
     </prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
   </properties>
  </reference>
  <reference parentSerial="-1" Name="PANEL_REF3" referenceId="1">
   <properties>
    <prop name="FileName">objects/NB/ai_rvs_mini.xml</prop>
    <prop name="Location">51.40404040404037 20.61577369801423</prop>
    <prop name="Geometry">1 0 0 1 11.31024531024536 89.57470249246197</prop>
    <prop name="TabOrder">44</prop>
    <prop name="dollarParameters">
     <prop name="dollarParameter">
      <prop name="Dollar">$ANALOG</prop>
      <prop name="Value">VOL</prop>
     </prop>
     <prop name="dollarParameter">
      <prop name="Dollar">$dp</prop>
      <prop name="Value">$dp</prop>
     </prop>
     <prop name="dollarParameter">
      <prop name="Dollar">$dpLogicRVS</prop>
      <prop name="Value">$dpLogicRVS</prop>
     </prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
   </properties>
  </reference>
  <reference parentSerial="-1" Name="PANEL_REF5" referenceId="3">
   <properties>
    <prop name="FileName">objects/NB/ai_rvs_mini.xml</prop>
    <prop name="Location">51.40404040404037 20.61577369801423</prop>
    <prop name="Geometry">1 0 0 1 11.31024531024536 106.3842263019858</prop>
    <prop name="TabOrder">46</prop>
    <prop name="dollarParameters">
     <prop name="dollarParameter">
      <prop name="Dollar">$ANALOG</prop>
      <prop name="Value">MAS</prop>
     </prop>
     <prop name="dollarParameter">
      <prop name="Dollar">$dp</prop>
      <prop name="Value">$dp</prop>
     </prop>
     <prop name="dollarParameter">
      <prop name="Dollar">$dpLogicRVS</prop>
      <prop name="Value">$dpLogicRVS</prop>
     </prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
   </properties>
  </reference>
  <shape Name="rec_ls3" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">79</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">248 154</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">47</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.184212552783564 0 0 0.4349522292993623 1.31528690967613 -20.71965675866934</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">248 154</prop>
    <prop name="Size">39 17</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="lvl_back" shapeType="ELLIPSE" layerId="0">
   <properties>
    <prop name="serialId">105</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">14.5 25.5</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">48</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">True</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1 0 0 1 -13.3 13.3</prop>
    <prop name="Center">150.9869565217391 43.20000000000012</prop>
    <prop name="X-Radius">6.5</prop>
    <prop name="Y-Radius">6.5</prop>
   </properties>
  </shape>
  <shape Name="rec_ls1" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">155</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">248 154</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">73</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.184212552783564 0 0 0.4349522292993623 -16.68471309032387 -20.98264331210178</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">248 154</prop>
    <prop name="Size">39 17</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
 </shapes>
</panel>
