<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="ru_RU.utf8"></prop>
  </prop>
  <prop name="Size">158 159</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">22 52</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[// ============================= Used libraries
#uses &quot;sdSymbolDynamics&quot;
//--------------------------------------------------

// ============================= Used variables/constants
enum Fuel{
  AI100 = 1,
  AI92 = 2,
  AI95 = 3,
  AI98 = 6,
  DT = 4,
  DTL = 5
};
const string DP = $dp;
const string LogicRVS = $dpLogicRVS;
const string LS1 = $ls1;
const string LS2 = $ls2;
const string LS3 = $ls3;

Fuel fuel;
//--------------------------------------------------

// ============================= Used properties
#property string resName
public void setResName(string s){text_name.text(s);}
public string getResName(){return text_name.text;}

#property Fuel fuel
public void setFuel(Fuel f){fuel = f;}
public Fuel getFuel(){return fuel;}

//--------------------------------------------------


// ============================= Predefined functions
string fuelToColor(Fuel f){
  if(f == Fuel::AI100){
    return &quot;AI100&quot;;
  }else if(f == Fuel::AI95){
    return &quot;AI95&quot;;
  }else if(f == Fuel::AI92){
    return &quot;AI92&quot;;
  }else if(f == Fuel::DT){
    return &quot;DT&quot;;
  }else if(f == Fuel::DTL){
    return &quot;DTL_pipe&quot;;
  }else if(f == Fuel::AI98){
    return &quot;AI98&quot;;
  }
}
string fuelToText(Fuel f){
  if(f == Fuel::AI100){
    return &quot;100&quot;;
  }else if(f == Fuel::AI95){
    return &quot;95&quot;;
  }else if(f == Fuel::AI92){
    return &quot;92&quot;;
  }else if(f == Fuel::AI98){
    return &quot;98&quot;;
  }else if(f == Fuel::DT){
    return &quot;ДТз&quot;;
  }else if(f == Fuel::DTL){
    return &quot;ДТл&quot;;
  }
}

void worker_val(dyn_string dp, dyn_anytype val){
  sdScaleVertical(&quot;top_bar&quot;, val[1], val[3], val[2]);

  nolink_text.visible((val[4] == 1));
  nolink_back.visible((val[4] == 1));
}

void initFuel(Fuel f){
  txt_fuel.text(fuelToText(f));

  rec_fuel.backCol(fuelToColor(f));
  top_bar.backCol(fuelToColor(f));
}

void cbAlarmLogic(string dp, string color){
  if(color != &quot;&quot;){
    top_bar.backCol(color);
  }else{
    initFuel(fuel);
  }
}
//--------------------------------------------------
]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main(){
  dpConnect(&quot;cbAlarmLogic&quot;, LogicRVS + &quot;.UnsanctionedChangeLevel:_alert_hdl.._act_state_color&quot;);

  dpConnect(&quot;worker_val&quot;, DP + &quot;.LVL.val&quot;,
                          DP + &quot;.SCL.LSH&quot;,
                          DP + &quot;.SCL.LSL&quot;,
                          DP + &quot;.STS.MBS_ERR&quot;);

  initFuel(fuel);
}
]]></script>
 </events>
 <shapes>
  <shape Name="RECTANGLE1" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">22 52</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">0</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[gradient,[linear,reflect,-0.663,0.494,0.398,0.482,0,{0,0,0},0.738,{255,255,255}]]</prop>
    <prop name="Geometry">1.375 0 0 1.537037037037037 -5.250000000000001 -30.92592592592593</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">22 52</prop>
    <prop name="Size">65 55</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="POLYGON5" shapeType="POLYGON" layerId="0">
   <properties>
    <prop name="serialId">13</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">16 62.00000000000001</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">12</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">True</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,0]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[gradient,[linear,reflect,-0.458,0.494,0.398,0.482,0,{0,0,0},0.775,{255,255,255}]]</prop>
    <prop name="Geometry">0.6376811594202898 0 0 1.176451319381255 14.79710144927536 -24.17546860782523</prop>
    <prop name="Closed">True</prop>
    <prop name="Points">
     <prop name="Location">16 62.00000000000001</prop>
     <prop name="Location">24 58</prop>
     <prop name="Location">56 52</prop>
     <prop name="Location">116 52</prop>
     <prop name="Location">150 58</prop>
     <prop name="Location">154 62.00000000000001</prop>
    </prop>
   </properties>
  </shape>
  <shape Name="rec_fuel" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">12</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">60 22</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{117,178,117}</prop>
    <prop name="TabOrder">11</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1.805528361348328 0 0 1.445391914727673 -51.96938284031998 21.73097785181726</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">60 22</prop>
    <prop name="Size">27 15</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="txt_fuel" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">10</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">14 36</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">9</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.465949352746991 0 0 1.503292127088103 38.80428471476865 2.41766765483057</prop>
    <prop name="Location">14 36</prop>
    <prop name="Size">29 11</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">MS Shell Dlg 2,-1,16,5,50,0,0,0,0,0,Обычный</prop>
    </prop>
    <prop name="Text">
     <prop name="ru_RU.utf8">ДТл</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">False</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter|AlignVCenter]</prop>
   </properties>
  </shape>
  <shape Name="text_name" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">19</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">322 84</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">18</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Geometry">1.042572070456305 0 0 1.006369426751592 -255.3333721187026 7.117091028944898</prop>
    <prop name="Location">322 84</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">Microsoft Tai Le,-1,16,5,50,0,0,0,0,0,Regular</prop>
    </prop>
    <prop name="Text">
     <prop name="ru_RU.utf8">№1/5</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">False</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter|AlignVCenter]</prop>
   </properties>
  </shape>
  <shape Name="RECTANGLE2" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">2</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">48 128</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">white</prop>
    <prop name="TabOrder">1</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">1.249999999999999 0 0 1.394179894179894 -30.73040635115032 -126.4550264550264</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">48 128</prop>
    <prop name="Size">17 55</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="back_bar" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">22</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">48 128</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{128,128,128}</prop>
    <prop name="TabOrder">21</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.9068627450980389 0 0 1.301587301587302 -11.50616977127254 -109.6031746031746</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">48 128</prop>
    <prop name="Size">17 55</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="top_bar" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">17</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">48 128</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">{117,174,117}</prop>
    <prop name="TabOrder">16</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.9061375449820068 0 0 -1.301587301587297 -11.47418883815556 293.8888888888879</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">48 128</prop>
    <prop name="Size">17 55</prop>
    <prop name="CornerRadius">2</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="PUSH_BUTTON1" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">45</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">25.06116658595236 81.96905262665116</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">42</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">MS Shell Dlg 2,-1,11,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">25.06116658595236 37.00000000000002</prop>
    <prop name="Size">90 96</prop>
    <prop name="BorderStyle">None</prop>
    <prop name="Text">
     <prop name="ru_RU.utf8"></prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(mapping event)
{
  ChildPanelOnCentral(&quot;faceplates/RVS/rvs.xml&quot;, dpGetDescription(DP + &quot;.&quot;), makeDynString(&quot;$dp:&quot; + DP,
                                                                                         &quot;$dpLogicRVS:&quot; + LogicRVS,
                                                                                         &quot;$ls1:&quot; + LS1,
                                                                                         &quot;$ls2:&quot; + LS2,
                                                                                         &quot;$ls3:&quot; + LS3,
                                                                                         &quot;$name:&quot; + getResName(),
                                                                                         &quot;$fuel:&quot; + (int)fuel));
}
]]></script>
    <script name="Acknowledge" isEscaped="1"><![CDATA[// SimpleCtrlScriptStart {valid}
main(int iType)
{
  dyn_errClass err;

  int          i, iReturnValue = 1, iDpCount = 12;
  dyn_int      diType = makeDynInt();
  dyn_string   dsDps;

  dsDps[1] = $dp+&quot;.LVL._sAH_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[2] = $dp+&quot;.LVL._sWH_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[3] = $dp+&quot;.LVL._sWL_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[4] = $dp+&quot;.LVL._sAL_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[5] = $dp+&quot;.WTR._sAH_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[6] = $dp+&quot;.WTR._sWH_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[7] = $dp+&quot;.WTR._sWL_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[8] = $dp+&quot;.WTR._sAL_Level&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[9] = $dp+&quot;.UnsanctionedChangeLevel&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[10] = $ls1+&quot;.status.bool.red&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[11] = $ls2+&quot;.status.bool.red&quot; + &quot;:_alert_hdl.._ack&quot;;
  dsDps[12] = $ls3+&quot;.status.bool.red&quot; + &quot;:_alert_hdl.._ack&quot;;

  if ( isFunctionDefined(&quot;isAckable&quot;) )
  {
    isAckable( iType, dsDps, iReturnValue );
    if ( iReturnValue == 0 || dynlen (dsDps ) &lt; 1 ) return;
  }

  for ( i = 1; i &lt;= dynlen(dsDps); i++ )
    diType[i] = iType;

  dpSetWait( dsDps, diType );

  err = getLastError();
  if ( dynlen(err) &gt; 0 )
    DebugN(err);
}
// SimpleCtrlScript {EP_confirm}
// dpCount {12}
// dp1 {$dp + &quot;.LVL._sAH_Level&quot;}
// dp2 {$dp + &quot;.LVL._sWH_Level&quot;}
// dp3 {$dp + &quot;.LVL._sWL_Level&quot;}
// dp4 {$dp + &quot;.LVL._sAL_Level&quot;}
// dp5 {$dp + &quot;.WTR._sAH_Level&quot;}
// dp6 {$dp + &quot;.WTR._sWH_Level&quot;}
// dp7 {$dp + &quot;.WTR._sWL_Level&quot;}
// dp8 {$dp + &quot;.WTR._sAL_Level&quot;}
// dp9 {$dp + &quot;.UnsanctionedChangeLevel&quot;}
// dp10 {$ls1 + &quot;.status.bool.red&quot;}
// dp11 {$ls2 + &quot;.status.bool.red&quot;}
// dp12 {$ls3 + &quot;.status.bool.red&quot;}
// SimpleCtrlScriptEnd {EP_confirm}
]]></script>
   </events>
  </shape>
  <shape Name="nolink_back" shapeType="RECTANGLE" layerId="1">
   <properties>
    <prop name="serialId">51</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 10</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">{0,0,0}</prop>
    <prop name="BackColor">Red</prop>
    <prop name="TabOrder">46</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[hatch,[cross,10,left]]</prop>
    <prop name="Geometry">0.3544603471803725 0 0 0.3145326964305739 21.45539652819629 33.85467303569428</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">10 10</prop>
    <prop name="Size">251 301</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="nolink_text" shapeType="PRIMITIVE_TEXT" layerId="1">
   <properties>
    <prop name="serialId">52</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 130</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">white</prop>
    <prop name="BackColor">Red</prop>
    <prop name="TabOrder">47</prop>
    <prop name="ToolTipText">
     <prop name="ru_RU.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.3292173692642701 0 0 0.5388859487293071 23.67235829316332 -12.96610215602695</prop>
    <prop name="Location">10 130</prop>
    <prop name="Size">261 61</prop>
    <prop name="Font">
     <prop name="ru_RU.utf8">MS Shell Dlg 2,-1,29,5,50,0,0,0,0,0,Обычный</prop>
    </prop>
    <prop name="Text">
     <prop name="ru_RU.utf8">СВЯЗЬ</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">False</prop>
    <prop name="Transformable">False</prop>
    <prop name="TextFormat">[0s,,,AlignHCenter|AlignVCenter]</prop>
   </properties>
  </shape>
 </shapes>
</panel>
